name: "Create release"

env:
  IMAGE_REPO: europe-docker.pkg.dev/kyma-project/prod/runtime-watcher-skr

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Create release'
        default: ""
        required: true

jobs:
  validate-release:
    name: Validate release
    runs-on: ubuntu-latest
    outputs:
      last_release_tag: ${{ steps.get_last_release_tag.outputs.last_release_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if source code tag exists
        run: |
          if ! [ $(git tag -l ${{ inputs.name }}) ]; then
            echo "::error ::Tag ${{ inputs.name }} doesn't exist"
            exit 1
          fi
      - name: Check if docker image exists
        run: |
          if ! $(docker manifest inspect ${{ env.IMAGE_REPO }}:${{ inputs.name }} > /dev/null 2>&1); then
            echo "::error ::docker image: ${{ env.IMAGE_REPO }}:${{ inputs.name }} doesn't exist"
            exit 1
          fi
      - name: Get last release version
        id: get_last_release_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LAST_RELEASE_TAG=$(./runtime-watcher/scripts/release/get_last_release.sh)
          echo "last_release_tag=$LAST_RELEASE_TAG" >> $GITHUB_OUTPUT
  create-draft:
    name: Create draft release
    runs-on: ubuntu-latest
    needs: validate-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate changelog
        id: generate_changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LAST_RELEASE_TAG: ${{needs.validate-release.outputs.last_release_tag}}
        run: |
          echo "Generating changelog from version: ${{ inputs.name }} to version: $LAST_RELEASE_TAG" 
          CHANGELOG_FILE_NAME=$(./runtime-watcher/scripts/release/create_changelog.sh ${{ inputs.name }} $LAST_RELEASE_TAG)
          echo "changelog_file_name=$CHANGELOG_FILE_NAME" >> $GITHUB_OUTPUT
      - name: Create draft release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_FILE_NAME: ${{ steps.generate_changelog.output.changelog_file_name }}
        run: |
          ./runtime-watcher/scripts/release/create_draft_release.sh ${{ inputs.name }} $CHANGELOG_FILE_NAME
